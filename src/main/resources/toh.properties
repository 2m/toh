recursive.solution=Rekursyvus sprendimas. Atvaizduojamas kiekvienas pagrindin\u0117s funkcijos i\u0161kvietimas.
transferred.from.disk=%4d. Perkeliamas %d diskas nuo %s ant %s\n
solution.completed=Sprendimas baigtas per %s.\n
moving.from=%d. Perkeliama nuo %s ant %s.
step.movement=hb({0}, {1}, {2}, {3}) '{'nuo {0} ant {1} per {2}, {3} disk{4}'}'
disk.moved.counterclockwise.direction=Disk\u0173 skai\u010dius lyginis - diskai perkeliami pagal laikrod\u017eio rodykl\u0119.
disk.moved.in.clockwise.direction=Disk\u0173 skai\u010dius nelyginis - diskai perkeliami prie\u0161 laikrod\u017eio rodykl\u0119.
iterative.solution=Iteratyvus sprendimas.
look.and.feel.was.not.found=Look and feel was not found.
towers.of.hanoi=Towers of Hanoi
resolved=I\u0161spr\u0119sta
initial.number.of.discs=Pradinis disk\u0173 skai\u010dius\:
incorrect.number.of.discs=Netinkamas disk\u0173 skai\u010dius
number.of.disc.must.be.between.0.and.100=Disk\u0173 skai\u010dius turi b\u016bti tarp 0 ir 100.
continue=T\u0119sti
New=I\u0161 naujo
iteratively=Iteraityviai
recursively=Rekursyviai
step.is=\u017dingsnis kas\:
improper.pitch.range=Netinkamas \u017eingsnio intervalas
step.interval.must.be.greater.than.or.equal.zero=\u017dingsnio intervalas turi b\u016bti didesnis arba lygus nuliui.
stop=Stabdyti
step=Vienas \u017eingsnis
register.actions=Registruoti atliktus veiksmus.
actions.taken=Atlikti veiksmai\:\n
container.doesnt.use.borderlayout=Container doesn't use BorderLayout\!
disk.number.too.small=Disk number too small.